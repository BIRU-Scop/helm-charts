tenzu-back:
  # Define the ingress value for the backend
  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/cluster-issuer: letsencrypt-production-dns01
    hosts:
      - tenzu-api-test.biru.sh
    tls:
      - hosts:
          - tenzu-api-test.biru.sh
        secretName: tenzu-api-test.biru.sh-tls
  postgresql:
    host: "$APP_NAME-postgres.$NAMESPACE.svc.cluster.local"
  redis:
    host: "$APP_NAME-redis-headless.$NAMESPACE.svc.cluster.local"
  # Email configuration
  email:
    # The default from email
    defaultFrom: "from@mycompany.com"
    # The host of the email server
    host: "ssl0.ovh.net"
    # The user of the email server
    user: "myUser@mycompany.com"
    # The password of the email server
    password: "verySecurePassword"
    # If the email server uses tls
    tls: True
    # If the email server uses ssl
    ssl: False
  # The email for the support
  supportEmail: "ask@tenzu.net"
  # Enable sentry for the backend
  sentry:
    enabled: True
    dsn: "BackendDSNSentry"
    environment: "production"
  # Define the secret key for Django
  secretKey: "qjiqjhnqijqisjosqjd√ßj"
  # Define the Token SigninKey
  tokensSigningKey: "sjisjisjs,silqjdqj"


tenzu-front:
  # Define the ingress value for the frontend
  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/cluster-issuer: letsencrypt-production-dns01
    hosts:
      - host: tenzu-test.biru.sh
        paths:
          - path: /
            pathType: Prefix
            backend:
              serviceName: tenzu-front-test
              servicePort: 80
    tls:
      - hosts:
          - tenzu-test.biru.sh
        secretName: tenzu-front-test.biru.sh-tls
  # Enable sentry for the frontend
  sentry:
    enabled: True
    dsn: "FrontendDSNSentry"
    environment: "production"

global:
  # Define the tenzu domains
  tenzu:
    frontendDomain: tenzu-test.biru.sh
    backendDomain: tenzu-api-test.biru.sh
  # Define the postgressql credentials in global (will be used by bitnami/postgresql)
  postgresql:
    auth:
      username: "tenzu"
      database: "tenzu"
      password: "DUApA!KV6baWixBCNVoce7x*ktZercmF9pbKH^^9yiX"
  # Define the redis password in global (will be used by bitnami/redis)
  redis:
    password: "ova8iP9Gesh@6P8fNqDg$4hhEfhpUyXak8Qac84fkUZ"