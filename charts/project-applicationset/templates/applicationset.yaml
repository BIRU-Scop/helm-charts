{{- range $application := .Values.applications }}
{{- with $ }}

apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: {{ .Values.project }}-{{ $application.name }}-applicationset
  namespace: argocd
spec:
  goTemplate: true
  generators:
    - list:
        elements:
        {{- range $env := .Values.env }}
        - {{- toYaml $env | nindent 10 -}}
          {{- if $application.envTargetRevision }}
          targetRevsion: {{ get $application.envTargetRevision $env.name }}
          {{- else }}
          targetRevision: {{ $application.targetRevision | default "HEAD" }}
          {{- end }}
        {{- end }}
  template:
    metadata:
      {{- if hasKey $application "use-app-name" }}
      name: {{ $application.name }}-{{`{{ .name }}`}}
      {{- else }}
      name: {{ .Values.project }}-{{ $application.name }}-{{`{{ .name }}`}}
      {{- end }}
      labels:
          biru.sh/env: {{`"{{ .name }}"`}}
          biru.sh/product: {{ .Values.project }}
          biru.sh/type: {{ $application.type }}
          biru.sh/app: {{ .Values.project }}-{{ $application.name }}
    spec:
      project: default
      sources:
        - repoURL: {{ $application.repoURL | default .Values.repoUrl }}
          # TODO: manage targetRevision by environnement in the structure when we'll be needed
          # targetRevision: {{`"{{ .revision.`}}{{ $application.name }}{{` }}"`}}
          {{- if $application.envTargetRevision }}
          targetRevision: {{ `"{{ .targetRevsion }}"` }}
          {{- else }}
          targetRevision: {{ $application.targetRevision | default "HEAD" }}
          {{- end }}
          {{- if hasKey $application "chart" }}
          chart: {{ $application.chart }}
          {{- else if hasKey $application "path" }}
          path: {{ $application.path }}
          {{- else }}
          path: {{ .Values.project }}/{{ $application.name }}
          {{- end }}
          helm:
            {{- if hasKey $application "releaseName"}}
            releaseName: {{ $application.releaseName | replace "ENV_NAME" `{{ .name }}`}}
            {{- end }}
      {{- if hasKey $application "values" }}
            valueFiles: {{ $application.values.files | toYaml | nindent 14}}
        - repoURL: {{ $application.values.url | default .Values.valuesUrl }}
          targetRevision: {{`"{{ .targetRevsion }}"` | default $application.targetRevision | default "HEAD"}}
          ref: {{ $application.values.ref | default "valuesRepo"}}
      {{- else }}
            valueFiles: 
              - $valuesRepo/values/{{ .Values.project }}/{{ $application.name }}/values-{{`{{ .name }}`}}.yaml
        - repoURL: {{ .Values.valuesUrl }}
          targetRevision: "HEAD"
          ref: "valuesRepo"
      {{- end }}
      destination:
        server: {{`"{{ .server }}"`}}
        namespace: {{ $application.namespace | default (printf "%s-%s" .Values.project `{{ .name }}`) }}
      {{- if hasKey $application "syncPolicy" }}
      syncPolicy: {{ $application.syncPolicy | toYaml | nindent 8 }}
      {{- else }}
      syncPolicy: {{ .Values.syncPolicy | toYaml | nindent 8 }}
      {{- end }}
---
{{- end }}
{{- end }}