# Default values for django-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

workersQuantity: 1
workersTimeout: 120

# Specify redis configuration
redis:
  # By default we add, health_check_interval: 5 as option
  options: '{"health_check_interval": 5}'
  # The host to connect to redis
  # host: "redis-headless.namespace.svc.cluster.local"

  # The password to connect to redis if needed
  # password: ""
  
  # If you want to use an existing secret for the password instead
  # existingSecret: "my-redis-secret"
  # The key that contains the password
  # passwordKey: "passwordKey"

sentry:
  # Specify if you want to enable sentry
  enabled: False
  # Specify your sentry DSN and environment
  # dsn: ""
  # environment: ""
  # the release is linked to the .image.tag

email:
  # If the email server uses tls
  tls: True
  # If the email server uses ssl
  ssl: False
  # Port of the email server
  port: 547

  # The default from email
  # defaultFrom: "from@mycompany.com"
  
  # The host of the email server
  # host: "ssl0.ovh.net"
  # The user of the email server
  # user: "myUser@mycompany.com"
  # The password of the email server
  # password: "verySecurePassword"
# The email for the support
# supportEmail: "ask@tenzu.net"

image:
  repository: ghcr.io/biru-scop/tenzu-back
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: v0-0-1-demo-11-early

persistentVolumeClaim:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      # Change with the size you need
      storage: 10Gi
  # storageClassName: longhorn

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # SpecifiesimagePullSecrets whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - chart-example.local

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /api/v1/healthcheck
    port: 8000
        
readinessProbe: 
  httpGet:
    path: /api/v1/healthcheck
    port: 8000

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Number of replicas for the Caddy worker
caddy:
  replicas: 1
